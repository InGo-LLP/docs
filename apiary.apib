FORMAT: 1A
HOST: https://partner-api-staging.ingo.me

# InGo Events API

The *InGo Events API* allows you to quickly and easily create and manage InGo 
implementations for your events. With this API you can create a new event, 
configure your event, create and customize your widgets, all from a REST client. 
This allows you to quickly create the items you need to quickly provision InGo 
functionality to all of your events. If you're a third-party event registration company,
this API will allow you to more easily create and manage InGo capabilities for all of your customers.

**THIS API AND DOCUMENTATION ARE IN BETA MODE. PLEASE USE WITH CAUTION AND REPORT ANY ISSUES TO INGO.**

For support, go to <http://support.ingo.me> and be sure to let us know that you're using the API.

# Group Getting Started

The *InGo Events API* is designed to be used for programmatic access
to the InGo events management system.  Using this API you can create
all of the necessary artifacts to embed our widgets into your event 
website(s) in an automated way and begin your social advocacy campaign 
right away. 

A few notes to get started on the right foot:

* Be sure to capture the Unique IDs returned to you so that you can 
place these within the script templates that render out widgets. Each 
event and each widget are unique. **If you cross Unique IDs you will be
advocating for the WRONG event**, so please ensure you are using the 
correct IDs in your script tags.

* Many code samples are provided for a variety of languages, including
Raw, cURL, Java, JavaScript, Node.js, Perl, Python, PHP, Ruby, Go, C#
Visual Basic, Groovy, Objective-C and Swift

* This documentation provides examples that will access a testing endpoint.
Production endpoint is `https://partner-api.ingo.me/`

* We are adding search to GET endpoints. Where specified you may use simple (string)
and complex (json) parameters.  Reference the "Listing All Events" endpoint
documentation for an example of how to specify this filtering criteria.
Keywords accepted in JSON syntax are:

> | Search&nbsp;Keyword | Example Query String |
> |-----|----|----|
> | equal | ?name={equal:"The Best Event"} |
> | notEqual | ?name={notEqual:"The Best Event"} |
> | in | name={in:"The Best Event,The Other Best Event"} (simplified version name=The Best Event,The Other Best Event) |
> | notIn | name={notIn:"The Best Event,The Other Best Event"} |
> | startsWith | name={startsWtih:"The Best"} (case insensitive) |
> | endsWith | name={endsWtih:"Event"} (case insensitive) |
> | contains | name={contains:"Best"} (case insensitive) |
> | similarTo | name={startsWtih:"Best"} (fuzzy match, case insensitive) |
> | greaterThan | start_date={greaterThan:"2016-01-15"} |
> | lessThan | end_date={lessThan:"2016-06-01"} (case insensitive) |

We will add "SEARCHABLE" to endpoints that provide this functionality.

* See the [Overview Video](https://www.youtube.com/watch?v=ftQMYAbhX-k)

* See our [Changelog](http://docs.ingoevents001alpha.apiary.io/#reference/changelog) to ensure that your API calls continue to work.

## Known Issues:
- The console (where you can exercise the API calls) gets "stuck" and returns a blank page and behaves 
erratically after about 4 or 5 calls to API endpoints. Apiary is aware of this bug and is working on 
a resolution.  The way to avoid this is to refresh the page before you make your next call. This only affects 
the console in the documentation.
- The overview video (link above) is not really an API overview. This is really a placeholder. We 
will post a more meaninful, API-focused video as soon as we can make one available.
- Only some of the sample code has been exercised. Again this API is in alpha release state. Please 
let us know if you encounter problems with generated sample code. Also, the raw code and samples related to 
image uploads is known to be problematic. Different languages will have different syntax for creating a
request body that includes image data (application/form-data). Consult your language or tool documentation
for details on how to upload files to an API.

# Group API Status
The status of the API can be determined using the status endpoints. If you
attempt to use the API and are getting unexpected errors, checking the 
status of the API is a good first step.

## Server Availability [/ping]

You can ping the API server to check that the server is running. If you do
not get a response from the call to ping, please check with our support team
at http://support.ingo.me

As of: 1.0

### Ping The Server [GET]

+ Response 200 (plain/text)

        OK

## API Version [/version]

You can get the API app version the server is running. This information
includes the environment (staging/production) that you are accessing.

As of: 1.0

### Get The API app Version [GET]

+ Response 200 (application/json)
    + Body

            {
              "env": "staging",
              "major": 0,
              "minor": 3,
              "patch": 0,
              "build_number": "149",
              "commit": "e318746efbabb839299e0bedc4987916758f71ed"
            }

# Group Security
The *InGo Events API* is secured using JWT tokens. Most of the
endpoints of the API require that you provide a valid token in
order to use the feature. There are a few exceptions (for example
the ping endpoint). To obtain a token you must authorize.

## Authorizing [/1.0/auth]

In order to use the API you must first authorize and obtain an API token.
Authorizing allows the *InGo Events API* to verify that you are permitted to 
access the API and determine what endpoints and objects you have 
permission to create, update or view.

The authorization endpoint allows an existing authorized user
to gain access to the API and obtain a security token to be used
for all secured endpoints. 

IMPORTANT:
* Make sure that you store this token securely. Anyone with the token can impersonate you.
* Tokens expire 8 hours from the moment they are generated (subject to change)

Once you've obtained a token you will send this token as your authoization
for all calls you make to the API.  The only exceptions are /ping and /version
which do not require authoization.

As of 0.1.0

### Authorize and Obtain a Token [POST]

+ Attributes
    + email: joe@example.com (string, required) - user email
    + pwd: abcdef12345678 (string, required) - user password

+ Request (application/json)

+ Response 200 (application/json)
    + Body
    
            {
                "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni...."
            }

## Listing Users [/1.0/users{?email}]

Administrators can obtain a list of the users in the system

**SECURITY**: You must have administrative privileges to use this endpoint

As of: 1.0

### List Users [GET]

+ Parameters
    + email: admin1@letsingo.com (string, optional) - use to get a single user by email address

+ Request (application/json)
    + Headers
    
            Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 200 (application/json)
    + Body

            [
                {
                    "id": 1,
                    "email": "admin@letsingo.com",
                    "locale": "en-US"
                },
                {
                    "id": 2,
                    "email": "user1@letsingo.com",
                    "locale": "en-US"
                }
            ]

## Creating Users [/1.0/users/]

Administrators can create a new user in the system. When you create a new user, you do not set the user's password. Instead you are
provided a one-time use tokenized url called _setpasswordurl_.  Send this url to the new user so that the user can
log into the admin console and begin to manage their events.

**SECURITY**: You must have administrative privileges to use this endpoint

As of: 1.0

### Create a New User [POST]

+ Attributes
    + email: admin@letsingo.com (string, required) - the email of the user
    + locale: `en-US` (string, required) - the start date for the event

+ Request (application/json)
    + Headers
    
            Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 201 (application/json)
    + Body

            {
                "id": 1,
                "email": "user1@letsingo.com",
                "locale": "en-US",
                "setPasswordUrl": "http://admin-staging.ingo.me/set-password?token=3ad447f0b057b4ae086947ee8c3027e1103d8020"
            }

## Listing Events Users Can Access [/1.0/users/{userId}/events]

Administrators can list events a user can access. 

**SECURITY**: You must have administrative privileges to use this endpoint

As of: 1.0

### Get Events A User Can Access [GET]

+ Parameters
    + userId: 1 (integer, required) - Id of the user.

+ Request (application/json)
    + Headers
    
            Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 200 (application/json)
    + Body

            {
                "event_unique_id": "KET3PCS5TWAAK0ANYCLP420LVNEKNJPL",
                "name": "The Business Conference"
                "user_id": 1,
                "email": "user1@letsingo.com",
            }

## Listing Users Who Can Access An Event [/1.0/events/{eventUniqueId}/users]

Administrators can list user who can access an event.

**SECURITY**: You must have administrative privileges to use this endpoint

As of: 1.0

### Get Users Who Can Access an Event [GET]

+ Parameters
    + eventUniqueId: KET3PCS5TWAAK0ANYCLP420LVNEKNJPL (stirng, required) - unique_id of the evnet.

+ Request (application/json)
    + Headers
    
            Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 200 (application/json)
    + Body

            {
                "event_unique_id": "KET3PCS5TWAAK0ANYCLP420LVNEKNJPL",
                "name": "The Business Conference"
                "user_id": 1,
                "email": "user1@letsingo.com",
            }

## Giving Users Access To An Event [/1.0/events/{eventUniqueId}/users/]

Administrators can give a user access to an event.

**SECURITY**: You must have administrative privileges to use this endpoint

As of: 1.0

### Give a User Access to an Event [POST]

+ Parameters
    + eventUniqueId: KET3PCS5TWAAK0ANYCLP420LVNEKNJPL (stirng, required) - unique_id of the evnet.

+ Request (application/json)
    + Headers
    
            Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
    + Body

            {
                "user_id": 1
            }

+ Response 201 (application/json)
    + Body

            {
                "event_unique_id": "KET3PCS5TWAAK0ANYCLP420LVNEKNJPL",
                "name": "The Business Conference"
                "user_id": 1,
                "email": "user1@letsingo.com",
            }

## Giving Event Access To Users [/1.0/users/{userId}/events/]

Administrators can give event access to a user. 

NOTE:  This is a synonymous call to "Give a User Access to an Event".

**SECURITY**: You must have administrative privileges to use this endpoint

As of: 1.0

### Give Event Access to a User [POST]

+ Parameters
    + userId: 1 (integer, required) - the id of the user.

+ Request (application/json)
    + Headers
    
            Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
    + Body

            {
                "event_unique_id": "KET3PCS5TWAAK0ANYCLP420LVNEKNJPL"
            }

+ Response 201 (application/json)
    + Body

            {
                "event_unique_id": "KET3PCS5TWAAK0ANYCLP420LVNEKNJPL",
                "name": "The Business Conference"
                "user_id": 1,
                "email": "user1@letsingo.com",
            }

# Group Managing Events
Creating and managing your events through the API is simple, but may involve a few calls
to the API in order to provide the API with a complete picture of your event. At the 
very core of the event management area is the event itself. 

You should have one event in the InGo events management system for
each event for which you are running an InGo social media markeing campaign.

## Listing Events [/1.0/events]

You can list all of your events or a filtered set of your events. The query parameters used
in the "List All Events" example are representational.  You may use any attribute of 
the event object to define criteria for your search.

**SECURITY:** You may only view events you created or have been assigned permission to.

**SEARCHABLE** See the Getting Started section for more details on how to provide criteria.

As of: 0.1.0

### List All Events [GET]

+ Request (application/json)
    + Headers
    
            Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....


    
+ Response 200 (application/json)
    + Body

            [
                {
                    "creator": "user1@letsingo.com",
                    "description": "This event promises to be the best event ever",
                    "start_date": "2016-09-28T00:00:00.000Z",
                    "end_date": "2014-09-30T00:00:00.000Z",
                    "name": "The Business Conference",
                    "uniqueid": "KET3PCS5TWAAK0ANYCLP420LVNEKNJPL",
                    "website_url": "http://www.example.com/event1/register",
                    "registration_platform": 3,
                    "registration_platform_api_key": "ALK3SJLA92AS35980",
                    "registration_platform_event_id": "ev132",
                    "registration_platform_event_url": "http://greatevents.com/events/ev",
                    "url_parammask": "",
                    "cors_domain": ["*"],
                    "use_post_registration": false,
                    "state": "testing",
                    "account_id": 1,
                    "facebook_page_id": "123"
                },
                {
                    "creator": "user1@letsingo.com",
                    "description": "This event promises to be the second best event ever",
                    "start_date": "2016-05-21T00:00:00.000Z",
                    "end_date": "2014-05-23T00:00:00.000Z",
                    "name": "The Business Conference",
                    "uniqueid": "CS5TWAAK0A0LVNEKNJPLNYCLPKET3P42",
                    "website_url": "http://www.example.com/event2/register",
                    "registration_url": "http://www.example.com/event2/register",
                    "registration_platform": 3,
                    "registration_platform_api_key": "ALK3SJLA92AS35980",
                    "registration_platform_event_id": "ev133",
                    "registration_platform_event_url": "http://greatevents.com/events/ev",
                    "url_parammask": "",
                    "cors_domain": ["*"],
                    "use_post_registration": false,
                    "state": "testing",
                    "account_id": 1,
                    "facebook_page_id": "123"
                }
            ]

## Creating Events [/1.0/events/]

You can create a new event. As the creator, you are automatically given access to the created event.

**SECURITY:** You may only create events for accounts you have permission to use. A valid account is required.

As of: 0.1.0

### Create an Event [POST]

+ Attributes
    + name: The Business Conference (string, required) - the name of the event (must be unique)
    + start_date: `2016-09-28T00:00:00.000Z` (string, required) - the start date for the event
    + end_date: `2016-10-01T00:00:00.000Z` (string, required) - the end date for the event
    + registration_url: `http://www.example.com/event2/register` (string, required) - the url where users will be directed to register
    + description: This event promises to be the second best event ever (string, required) - describes the event
    + `target_reg_count`: 1234 (number, optional) - the target number of registrants for your account 
    + website_url: `http://www.example.com/event2/register` (string, required) - the website of the event
    + registration_platform: 1 (number, required) - obtained from call to /registrationplatform
    + `registration_platform_event_id`: null (string) - if yusing a registration platform, the event ID for that platform
    + `registration_platform_api_key`: SOMEOTHERAPIKEY (string, required) - if you registration platform requires an API key
    + `url_params_mask`: null (string) - registration platform url mask
    + cors_domains: example.com (array, required) - an array of domains where InGo code will run, or * for any
    + `use_post_registration`: false (boolean) - defauls to false, whether the widgets will be used after the event is over
    + account_id: 1 (number, required) - indicates which account owns this event, use /accounts endpoint to obtain the id
    + `facebook_page_id`: 140489442646654  (string) - facebook page id used for creating post at facebook

+ Request (application/json)
    + Headers
    
            Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 201 (application/json)
    + Body
    
            {
                "uniqueId": "KET3PCS5TWAAK0ANYCLP420LVNEKNJPL"
            }

## Getting Events [/1.0/events/{eventId}]

You can get the details for one of your events.

**SECURITY:** You may only get events you have permission to.

As of: 0.1.0

### Get an Event [GET]

+ Parameters
    + eventId: BA8A4314276C45398FFEA33C55CD3F96 (string, required) - Unique Id of the event.

+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 200 (application/json)

        
        {
            "creator": "Joe Smith",
            "description": "This event promises to be the best event ever",
            "target_reg_count": 1234,
            "start_date": "2016-09-28T00:00:00.000Z",
            "end_date": "2014-09-30T00:00:00.000Z",
            "livedate": null,
            "name": "The Business Conference",
            "uniqueid": "KET3PCS5TWAAK0ANYCLP420LVNEKNJPL",
            "website_url": "http://www.example.com/event1/register",
            "registration_platform": 3,
            "registration_platform_api_key": "ALK3SJLA92AS35980",
            "registration_platform_event_id": "ev132",
            "registration_platform_event_url": "http://greatevents.com/events/ev",
            "url_params_mask": "",
            "cors_domain": ["example.com"],
            "use_post_registration": false,
            "state": "testing",
            "account_id": 1,
            "facebook_page_id": "123"
        }

## Updating Events [/1.0/events/{eventIdToUpdate}/]

You can update one of your events.

**NOT IMPLEMENTED YET**

### Update an Event [PATCH]

+ Parameters
    + eventIdToUpdate: KET3PCS5TWAAK0ANYCLP420LVNEKNJPL (string, required) - the unique ID of the event

+ Attributes
    + name: The Business Conference (string, optional) - the name of the event
    + start_date: `2016-09-28` (string, optional) - the start date for the event
    + end_date: `2016-10-01` (string, optional) - the end date for the event
    + registration_url: `http://www.example.com/event2/register` (string, optional) - the url where users will be directed to register
    + description: This event promises to be the second best event ever (string, optional) - describes the event
    + `target_reg_count`: 1234 (number, optional) - the target number of registrants for your account 
    + website_url: `http://www.example.com/event2/register` (string, optional) - the website of the event
    + registration_platform: 1 (number, optional) - obtained from call to /registrationplatform
    + `registration_platform_event_id`: null (string, optional) - if using a registration platform, the event ID for that platform
    + `registration_platform_api_key`: SOMEOTHERAPIKEY (string, optional) - if you registration platform requires an API key
    + `url_params_mask`: null (string, optional) - registration platform url mask
    + cors_domains: example.com (array, optional) - an array of domains where InGo code will run, or * for any
    + `use_post_registration`: false (boolean, optional) - defauls to false, whether the widgets will be used after the event is over
    + live_date: `2016-09-28` (string, optional) - the date your event will go live
    + state: live (string, optional) - one of {live,closed,archived,testing,deleted}
    + `facebook_page_id`: 140489442646654 (string) - facebook page id to use while posting

+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 200 (application/json)
    + Body
    
            {
                "creator": "Joe Smith",
                "description": "This event promises to be the best event ever",
                "target_reg_count": 1234,
                "start_date": "2016-09-28T00:00:00.000Z",
                "end_date": "2014-09-30T00:00:00.000Z",
                "livedate": null,
                "name": "The Business Conference",
                "uniqueid": "KET3PCS5TWAAK0ANYCLP420LVNEKNJPL",
                "website_url": "http://www.example.com/event1/register",
                "registration_platform": 3,
                "registration_platform_api_key": "ALK3SJLA92AS35980",
                "registration_platform_event_id": "ev132",
                "registration_platform_event_url": "http://greatevents.com/events/ev",
                "url_params_mask": "",
                "cors_domain": ["example.com"],
                "use_post_registration": false,
                "state": "testing",
                "account_id": 1,
                "facebook_page_id": "123"
            }

## Deleting Events [/1.0/events/{eventIdToDelete}]

You can delete one of your Events

**NOT IMPLEMENTED YET**

As of: 0.1.0

### Delete an Event [DELETE]

+ Parameters
    + eventIdToDelete: KET3PCS5TWAAK0ANYCLP420LVNEKNJPL (string, required) - the unique ID of the event

+ Request (application/json)
    + Headers
    
            Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 201 (application/json)
    + Body
    
            {
                "uniqueId": "KET3PCS5TWAAK0ANYCLP420LVNEKNJPL"
            }

# Group Managing Event Images        
        
Events can have images assoicated to them. These images help InGo brand posts made by event 
registrants and social email templates. There are four types of images:

| Type     | Description                                         | Expected Dimensions |
|----------|-----------------------------------------------------|---------------------|
| header-logo | Image used as the header for your events            |       110×45       |
| social-post-logo | Image used as the image content in registrant posts |       1024×512      |
| email-banner | Image used within email templates                   |       625×110       |
| attendee-banner | Image used as the banner to brand the attendee page |       920×120       |

## Uploding Images Option 1 [/upload/1.0/events/{eventId}/images]

You can upload images for one of your events using form data. 

NOTE: To update an existing image for an image type, simply 
upload an image specifying the same image type again. 

**SECURITY:** You may only upload image data for events you have permission to use.

As of: 0.1.0

### Uploading an Image for an Event with Form Data [POST]
**KNOWN ISSUE:** The example code provided in the console and examples sections of this
documentation are not good examples of how to upload form-data data for most languages
or for the raw request/response example. Typically for cURL for example, one might
send a file to an http endpoint with 
`curl -F "image[file]=@file.jpg" http://apiendpoint.com/images`
The documentation is limited to a raw request/response display which is atypical 
and frankly not the recommended way to execute a file upload API call.

+ Parameters
    + eventId: KET3PCS5TWAAK0ANYCLP420LVNEKNJPL (string, required) - the ID of the event

+ Request (application/form-data; boundary=---------------------------386215073532303139996316699)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
    + Body

            -----------------------------386215073532303139996316699
            Content-Disposition: form-data; name="social-post-logo"; filename="ingologo_with_gradient.png"
            Content-Type: application/octet-stream
            
            < encoded data for image >
            -----------------------------386215073532303139996316699--

+ Response 201 (application/json)
    + Body
    
            [
                {
                    "url":"https://s3.amazonaws.com/ingo.development.us-east.imgs/9a821432-92da-41/01cd1e3c-2470-43b1-815b-f78e6c103561.png",
                    "type":"social-post-logo"
                }
            ]


## Uploding Images Option 2 [/1.0/events/{eventId}/images/]

You can upload images for one of your events from a URL.

NOTE: To update an existing image for an image type, simply 
upload an image specifying the same image type again. 

**SECURITY:** You may only upload image data for events you have permission to use.

As of: 0.1.0

### Uploading an Image for an Event from a URL [POST]

+ Parameters
    + eventId: KET3PCS5TWAAK0ANYCLP420LVNEKNJPL (string, required) - the ID of the event

+ Request (application/json)
    + Headers

            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    + Body
    
            [
                {
                    "name": "attendee-banner",
                    "url": "http://example.com/image.gif"
                }
            ]

+ Response 201 (application/json)
    + Body
    
            [
                {
                    "url":"https://s3.amazonaws.com/ingo.development.us-east.imgs/9a821432-92da-41/01cd1e3c-2470-43b1-815b-f78e6c103561.png",
                    "type":"attendee-banner"
                }
            ]



## Listing Images [/1.0/events/{eventId}/images]

You can list the images associated with one of your events.

**SECURITY:** You may only view image data for events you have permission to use.

As of: 0.1.0

### Get Images For an Event [GET]

+ Parameters
    + eventId: KET3PCS5TWAAK0ANYCLP420LVNEKNJPL (string, required) - the ID of the event 

+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 201 (application/json)
    + Body
    
            {
                "social-post-logo":
                    {
                        "url":"https://s3.amazonaws.com/ingo.development.us-east.imgs/DTXY3NE0YLUJNSME/VF1KWUN52NJ3BFY22JJ3E2GHBES0JQO4.jpg"
                    }
            }

# Group Managing Event Advocacy Templates

Advocacy Templates define the text and urls used for social media interaction.
Each event has it's own advocacy templates. If you do not define any advocacy 
templates the master defaults will be used. An advocacy template allows you to 
customize the way that your advocates interact with social media through posts
and invites.

Advocacy Template Types:

| Template Type  | Description  |
|----------------|---------------|
| advocacy_post | the text used by default for posting by an advocate (Social Widget) |
| attendee_post | the text used by default for notifying contacts when registering for the event |
| invitation_subject | the text used for the subject of an invite  |
| invitation_body | the text used the default text used for an invitation |

Advocacy templates can be customized *per* Social Network. Below are the service sesignations:

| Service Designation | Information |
|---------|--------| 
| facebook | Facebook: http://www.facebook.com |
| linkedin | LinkedIn: http://www.linkedin.com |
| twitter  | Twitter: http://www.twitter.com |
| google | Google+: http://plus.google.com |
| xing | Xing: http://www.xing.com |


The following languages are supported for custom advocacy templates:

| Locale | Description |
|--------|------------|
| ar | Arabic |
| fr | French |
| pt-PT | Portuguese (Portugal) |
| zh-CN | Chinese (Standard) |
| it | Italian |
| pt-BR | Portuguese (Brazil) |
| nl | Dutch |
| de | German |
| ru | Russian |
| en | English |
| es | Spanish |

Qualifiers:

| Qualifier | Description |
|--------|------|
| url | indicates that the text is the url that should be used in the links for the post or invite |

## Event Advocacy Templates Management [/1.0/events/{eventId}/advocacy-templates]

You can list all of the advocacy templates for one of your events.

**SECURITY:** You may only view advocacy templates for events you have permission to use.

As of: 1.0

### List the Advocacy Templates for an Event [GET]

+ Parameters
    + eventId: KET3PCS5TWAAK0ANYCLP420LVNEKNJPL (string, required) - the unique ID of the event.

+ Request
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 200 (application/json)
    + Body

            [
                {
                    "template_type": "advocacy_post",
                    "locale": "en",
                    "text": "Check out The Business Conference"
                },
                {
                    "template_type": "attendee_post",
                    "locale": "en",
                    "text": "I just registered for The Business Conference"
                },
                {
                    "social_service": "facebook",
                    "template_type": "advocacy_post",
                    "locale": "en",
                    "text": "Hey friends, check out The Business Conference"
                },
                {
                    "social_service": "facebook",
                    "template_type": "attendee_post",
                    "locale": "en",
                    "text": "Hey friends, I just registered for The Business Conference"
                }
            ]

## Advocacy Template [/1.0/events/{eventId}/advocacy-templates{?qualifier,social_service,template_type,locale}]


+ Parameters
    + eventId: KET3PCS5TWAAK0ANYCLP420LVNEKNJPL (string, required) - the ID of the event
    + qualifier: url (enum[string], optional) - see qualifiers above
        + Members
            + url
    + social_service: facebook (enum[string], optional) -  the social service designation 
        + Members
            + facebook
            + linkedin
            + twitter
            + google
            + xing
    + `template_type`: `advocacy_post` (enum[string], required) - the template type
        + Members
            + advocacy_post
            + attendee_post
            + invitation_subject
            + invitation_text
    + locale: en (string, required) - the use this template text only for this locale
        + Members
            + ar - Arabic
            + fr - French 
            + `pt-PT` - Portuguese (Portugal)
            + `zh-CN` - Chinese (Standard)
            + it - Italian 
            + `pt-BR` - Portuguese (Brazil)
            + nl - Dutch
            + de - German
            + ru - Russian
            + en - English
            + es - Spanish        
    

### Get an Advocacy Template [GET]

You can retrieve an advocacy template.

**SECURITY:** You may only view advocacy templates for events you have permission to use.

As of: 1.0


+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....

    
+ Response 201 (application/json)
    + Body
    
                {
                    "qualifier": null,
                    "template_type": "advocacy_post",
                    "locale": "en",
                    "text": "Check out The Business Conference"
                }


### Create an Advocacy Template [POST]

You can create advocacy templates for your event to customize the content of a post or invite. You can 
change what text appears for posts and invites and what url the post or invite will link to. You can customize
this behavior for some or all of the supported social networks.

**SECURITY:** You may only create advocacy templates for events you have permission to use.

As of: 1.0

+ Attributes
    + text: Come experience the best event of the year (string, required) - the text to use
        
+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 201 (application/json)
    + Body
    
                {
                    "qualifier": null,
                    "template_type": "advocacy_post",
                    "locale": "en",
                    "text": "Check out The Business Conference"
                }

### Updating an Advocacy Template [PATCH]

You can update advocacy templates for your event.

**SECURITY:** You may only update advocacy templates for events you have permission to use.

As of: 1.0


+ Attributes
    + text: Come experience the best event of the year (string, required) - the text to use
        
+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 200 (application/json)
    + Body
    
                {
                    "qualifier": null,
                    "template_type": "advocacy_post",
                    "locale": "en",
                    "text": "Check out The Business Conference"
                }

### Removing Advocacy Template [DELETE]

You can remove advocacy template for your event.

**SECURITY:** You may only update advocacy templates for events you have permission to use.

As of: 1.0

+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....


+ Response 200 (application/json)
    + Body
    
                {
                    "qualifier": null,
                    "template_type": "advocacy_post",
                    "locale": "en",
                    "text": "Check out The Business Conference"
                }



# Group Managing Event Keywords

## Managing Event Keyword [/1.0/events/{eventId}/keywords/{keywordId}]

+ Parameters
    + eventId: KET3PCS5TWAAK0ANYCLP420LVNEKNJPL (string, required) - the ID of the event
    + keywordId: 1000 (number, required) - the ID of keyword

### Edit Event Keyword [PATCH]

+ Attributes
    + value: abc (string) - one word to match, must be only one word and lowercased
    + cost: 1 (number) - cost of this keyword, default 1

+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....

+ Response 200 (application/json)

    + Body
    
            {
                "id": 1000,
                "value": "word",
                "cost": 10
            }

### Delete Event Keyword [DELETE]

+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....

+ Response 200 (application/json)

    + Body
    
            {
                "id": 1000,
                "value": "word",
                "cost": 10
            }

## Managing Event Keywords Set [/1.0/events/{eventId}/keywords]

+ Parameters
    + eventId: KET3PCS5TWAAK0ANYCLP420LVNEKNJPL (string, required) - the ID of the event

### Get all Event Keywords [GET]

+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....

+ Response 200 (application/json)

    + Body
    
                [
                    {
                        "id": 1000,
                        "value": "word",
                        "cost": 10
                    }
                ]

### Create new Event Keyword [POST]

+ Attributes
    + value: abc (string, required) - one word to match, must be only one word and lowercased
    + cost: 1 (number) - cost of this keyword, default 1
    
+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....

+ Response 201 (application/json)

    + Body
    
            {
                "id": 1000,
                "value": "word",
                "cost": 10
            }


# Group Managing Widgets

Widget Types
-----------------
| Widget Type       | Usage                                                                       | 
|-------------------|-----------------------------------------------------------------------------|
| social            | used for socially adovcating for the event (invites, posts, who's in)       |
| login             | used to allow event attendees to authorize use of their social netowrk      |
| registration      | used to auto-fill registration data from social network data                |
| confirmation      | used at the end of your registration flow to signify completed registration |

IMPORTANT: parameters listed with dot notation below, like `showTab.invitation` and `showTab.share` are specified
with nested object notation like this:

```
"params": { 
    "showTab": { 
        "invitation" : false, 
        "share" : false 
    }
  } 
```
DO NOT specify these parameters with dot notation.

LOGIN Widget Available Parameters
-----------------------
| Parameter Name | Meaning | Default | Versions |
|--------|---------|-------|---|
| autostart | Should dialog automatically open on page load? | false | ALL |
| breakout | Is the login widget Break out of iframe? | false | ALL |
| closeModalOnManual | Close on manual registration? | false | ALL |
| defaultManualFieldValue.allowIdentify | Default value for allow to identify permission | true | ALL |
| defaultManualFieldValue.allowPost | Default value for allow to post permission | true | ALL |
| defaultManualFieldValue.companyName | Default value for company name input |  | ALL |
| defaultManualFieldValue.companyPosition | Default value for company position input |  | ALL |
| defaultManualFieldValue.email | Default value for email input |  | ALL |
| defaultManualFieldValue.firstName | Default value for first name input |  | ALL |
| defaultManualFieldValue.lastName | Default value for last name input |  | ALL |
| disableClose | Can user close dialog? | false | ALL |
| forwardQueryString | Forward Query String? | false | ALL |
| hidePermissions.allowIdentify | Hide the identify permission checkbox? | false | ALL |
| hidePermissions.allowPost | Hide the post permission checkbox? | false | ALL |
| isExhibitor | Mark all users who login through this widget as exhibitors | false | v1.4.0+ |
| lang | Language | en | ALL |
| layout | Layout | standard | ALL |
| manual | Url for manual registrations | | ALL |
| modal | Is widget running as dialog? | false | ALL |
| networks.facebook | Is facebook login enabled? | true | ALL |
| networks.google | Is google login enabled? | false | ALL |
| networks.linkedin | Is linkedin login enabled? | true | ALL |
| networks.twitter | Is twitter login enabled? | false | ALL |
| networks.xing | Is xing login enabled? | false | ALL |
| previousUrl.url | Social Login Previous URL |  | ALL |
| previousUrl.useCurrent | Use the current page for Social Login Previous URL? | false | ALL |
| registerColor | Color for the register manually button |  | ALL |
| registerDisplayFields | Should the register manually button slide down the manual fields? | true | ALL |
| requiredFields.companyName | Require company name? | true | ALL |
| requiredFields.companyPosition | Require position? | true | ALL |
| requiredFields.firstName | Require first name? | true | ALL |
| requiredFields.lastName | Require last name? | true | ALL |
| showManual | Should dialog show manual fields? | false | ALL |
| target | the css selector of an element that will trigger the popup (required for popup that does not autostart) | false | ALL |
| texts.{lang}.header | Key header | Register Socially (en) | ALL |
| texts.{lang}.headerSub | Key headerSub | Win prizes, earn points and connect with people!. (en) | ALL |
| texts.{lang}.label.button.facebook | Key label.button.facebook. | Facebook (en) | ALL |
| texts.{lang}.label.button.google | Key label.button.google. | Google+ (en) | ALL |
| texts.{lang}.label.button.linkedin | Key label.button.linkedin. | LinkedIn (en) | ALL |
| texts.{lang}.label.button.manual | Key label.button.manual. | Continue (en) | ALL |
| texts.{lang}.label.button.register | Key label.button.register. | Register Manually (en) | ALL |
| texts.{lang}.label.button.twitter | Key label.button.twitter. | Twitter (en) | ALL |
| texts.{lang}.label.button.xing | Key label.button.xing. | Xing (en) | ALL |
| texts.{lang}.label.checkbox.allowIdentify | Key label.checkbox.allowIdentify. | Make me visible to other attendees (en) | ALL |
| texts.{lang}.label.checkbox.allowPost | Key label.checkbox.allowPost. | Let my network know that I'm attending the event (en) | ALL |
| texts.{lang}.label.radio.no | Key label.radio.no. | No (en) | ALL |
| texts.{lang}.label.radio.yes | Key label.radio.yes. | Yes (en) | ALL |
| texts.{lang}.placeholder.companyName | Key placeholder.companyName. | Company (en) | ALL |
| texts.{lang}.placeholder.companyPosition | Key placeholder.companyPosition. | Position (en) | ALL |
| texts.{lang}.placeholder.email | Key placeholder.email. | Email (en) | ALL |
| texts.{lang}.placeholder.firstName | Key placeholder.firstName. | First Name (en) | ALL |
| texts.{lang}.placeholder.lastName | Key placeholder.lastName. | Last Name (en) | ALL |
| texts.{lang}.privacyPolicy | Key privacyPolicy. | Privacy Policy (en) | ALL |
| texts.{lang}.privacyPolicyUrl | Key privacyPolicyUrl. | /privacy-policy/ (en) | ALL |
| useRadioPermissions | Use radio buttons for permissions | false | 1.0.8+ |
| whiteLabel | Hide InGo branding? | true | ALL |

SOCIAL Widget Available Parameters
-----------------------
| Parameter Name | Meaning | Default | Versions |
|--------|---------|-------|---|
| customHeight|Custom height for widget| | ALL |
| fluidWidth|Should the widget fill whole parent block?|false| ALL |
| inviteForOnlyEnabledNetworks|Limit invitations to enabled networks|true| ALL |
| lang|Language|en| ALL |
| networks.facebook|Is facebook login enabled?|true| ALL |
| networks.google|Is google login enabled?|false| ALL |
| networks.linkedin|Is linkedin login enabled?|true| ALL |
| networks.twitter|Is twitter login enabled?|true| ALL |
| networks.xing|Is xing login enabled?|false| ALL |
| numberOfPreselectedContacts|Number of preselected contacts|6| ALL |
| renderMode|Render mode|replace| ALL |
| show|Which tab to show?|invitation| ALL |
| showTab.invitation|Show Invites Tab?|true| ALL |
| showTab.share|Show Share Tab?|true| ALL |
| showTab.whosin|Show Who is In Tab?|true| ALL |
| texts.{lang}.authButton.facebook|Key authButton.facebook |Facebook (en) | ALL |
| texts.{lang}.authButton.google|Key authButton.google |Google (en) | ALL |
| texts.{lang}.authButton.linkedin|Key authButton.linkedin |LinkedIn (en) | ALL |
| texts.{lang}.authButton.twitter|Key authButton.twitter |Twitter (en) | ALL |
| texts.{lang}.authButton.xing|Key authButton.xing |Xing (en) | ALL |
| texts.{lang}.dropdown.logout|Key dropdown.logout |Logout (en) | ALL |
| texts.{lang}.invitation.error.blankMessage|Key invitation.error.blankMessage |Please provide a message (en) | ALL |
| texts.{lang}.invitation.error.facebookContactsCount|Key invitation.error.facebookContactsCount |Cannot tag more than 10 persons in a Facebook invitation (en) | ALL |
| texts.{lang}.invitation.error.twitterMessageLength|Key invitation.error.twitterMessageLength |Twitter message must be under 140 characters (en) | ALL |
| texts.{lang}.invitation.filter.showAll|Key invitation.filter.showAll |Show all (en) | ALL |
| texts.{lang}.invitation.filter.someSelected|Key invitation.filter.someSelected | #{count} ((contact&#124;contacts)) selected (en) | ALL |
| texts.{lang}.invitation.preview.close|Key invitation.preview.close |Close Preview (en) | ALL |
| texts.{lang}.invitation.preview.open|Key invitation.preview.open |Preview (en) | ALL |
| texts.{lang}.invitation.preview.placeholder.`_` | Key invitation.preview.placeholder._  |You should come because ... (en) | ALL |
| texts.{lang}.invitation.preview.placeholder.fb|Key invitation.preview.placeholder.fb |You are tagging your Facebook friends publicly, say something to encourage them to come to the show! (en) | ALL |
| texts.{lang}.invitation.preview.send|Key invitation.preview.send |Send Invites (en) | ALL |
| texts.{lang}.invitation.search.placeholder|Key invitation.search.placeholder |Search people, titles, companies, etc (en) | ALL |
| texts.{lang}.invitation.sendInvite.inProcess|Key invitation.sendInvite.inProcess |Inviting... (en) | ALL |
| texts.{lang}.invitation.sendInvite.invite|Key invitation.sendInvite.invite |Invite selected contacts (en) | ALL |
| texts.{lang}.invitation.subHeader.Authed|Key invitation.subHeader.Authed |Invite your contacts. Select from the list below then enter a message (en) | ALL |
| texts.{lang}.invitation.subHeader.NotAuthed|Key invitation.subHeader.NotAuthed |Sign in socially (en) | ALL |
| texts.{lang}.invitation.subHeader.welcome|Key invitation.subHeader.welcome |Invite your contacts. Experience an event tailored to you (en) | ALL |
| texts.{lang}.invitation.tabName|Key invitation.tabName |Invites (en) | ALL |
| texts.{lang}.share.sendPost.inProcess|Key share.sendPost.inProcess |Sending Post... (en) | ALL |
| texts.{lang}.share.sendPost.post|Key share.sendPost.post |Post (en) | ALL |
| texts.{lang}.share.sendPost.title|Key share.sendPost.title |Please select a social network to post about the event (en) | ALL |
| texts.{lang}.share.tabName|Key share.tabName |Share (en) | ALL |
| texts.{lang}.whosin.nousers.placeholder|Key whosin.nousers.placeholder |There are no attendees here yet (en) | ALL |
| texts.{lang}.whosin.search.placeholder|Key whosin.search.placeholder |Search people who are attending (en) | ALL |
| texts.{lang}.whosin.subHeader.NotAuthed|Key whosin.subHeader.NotAuthed |Sign in socially (en) | ALL |
| texts.{lang}.whosin.subHeader.welcome|Key whosin.subHeader.welcome |See who is attending. Experience an event tailored to you (en) | ALL |
| texts.{lang}.whosin.tabName|Key whosin.tabName |Who's In (en) | ALL |
| whiteLabel|Hide InGo branding?|true| ALL |

CONFIRMATION Widget Available Parameters
-----------------------
| Parameter Name | Meaning | Default | Versions |
|--------|---------|-------|---|
| attendee.company|Company name| | ALL |
| attendee.email|Email| | ALL |
| attendee.firstName|First name| | ALL |
| attendee.lastName|Last name| | ALL |
| attendee.title|Company position| | ALL |
| lang|Locale of widget| | ALL |

REGISTRATION Widget Available Parameters
-----------------------
| Parameter Name | Meaning | Default | Versions |
|--------|---------|-------|---|
| fields.user.company|Selector for user's company name|(null)| ALL |
| fields.user.company_position|Selector for user's company position|(null)| ALL |
| fields.user.email|Selector for user email|(null)| ALL |
| fields.user.firstName|Selector for user first name|(null)| ALL |
| fields.user.industry|Selector for user industry|(null)| ALL |
| fields.user.interests|Selector for user interests|(null)| ALL |
| fields.user.lastName|Selector for user last name|(null)| ALL |
| save|Sync user's information back to InGo?|true| ALL |



Note: the `{lang}` portion of the above paramenters should be replaced with an approprate supported language tag.

IMPORTANT: parameters listed with dot notation above, like `showTab.invitation` and `showTab.share` are specified
with nested object notation like this:

```
"params": { 
    "showTab": { 
        "invitation" : false, 
        "share" : false 
    }
  } 
```
DO NOT specify these parameters with dot notation.

Supported Language Tags
----------------------
| Locale | Description |
|--------|------------|
| ar | Arabic |
| fr | French |
| pt-PT | Portuguese (Portugal) |
| zh-CN | Chinese (Standard) |
| it | Italian |
| pt-BR | Portuguese (Brazil) |
| nl | Dutch |
| de | German |
| ru | Russian |
| en | English |
| es | Spanish |




Widget Versions
---------------
We recommend you always specify "latest" as the widget version when creating widgets.
Check the portal for existing widget versions if you need to create a specific version of a widget.

## Creating Widgets [/1.0/events/{eventId}/widget-configs/]

You can create a widget for and event that is available to you to manage.

**SECURITY:** You may only create widgets for events you have permission to use.

As of: 0.1.0

### Create a Widget [POST]

+ Parameters
    + eventId: KET3PCS5TWAAK0ANYCLP420LVNEKNJPL (string, required) - the ID of the event

+ Attributes
    + type: social (string, required) - the type of the widget to create
    + version: latest (string, required) - the version of the widget (must be an existing version or "latest")
    + custom_css (array) - optional array of custom css urls
    + custom_js (array) - optional array of custom js urls
    + params (object, required) - the parameters for the widget
        
+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 201 (application/json)
    + Body
    
            {
                "unique_id": "LSYCQDY32SU1FSP3T4IGMGRFQIPHWZE5",
                "type": "social",
                "key": "social-S5LI",
                "version": "0.5.1",
                "conference_id": "431",
                "custom_css":
                [
                ],
                "custom_js":
                [
                ],
                "json": "{"css":["http://cdn.ingo.me/widgets-social/0.5.1/css/ingo.social.widget.css"],"js":["http://cdn.ingo.me/widgets-social/0.5.1/js/ingo.social.widget.js"],"useJQuery":true,"type":"social","version":"0.5.1","status":0,"params":{"ingoId":"BA8A4314276C45398FFEA33C55CD3F96"}}",
                "created_at": "2016-02-04T21:06:52.691Z",
                "status": "Production Ready",
                "script": "<script src=\"https://cdn.ingo.me/widgets-loader/latest/js/ingo.loader.widget.js\" data-ingo-id=\"LSYCQDY32SU1FSP3T4IGMGRFQIPHWZE5\"></script>"
            }

## Listing Widgets [/1.0/events/{eventId}/widget-configs]

You can get the list of existing widget for and event that is available to you to manage.

**SECURITY:** You may view widgets for events you have permission to use.

As of: 0.1.0

### List the Widgets for an Event [GET]

+ Parameters
    + eventId: KET3PCS5TWAAK0ANYCLP420LVNEKNJPL (string, required) - the unique ID of the event

+ Request
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 200 (application/json)
    + Body

            [
                {
                    "unique_id": "LSYCQDY32SU1FSP3T4IGMGRFQIPHWZE5",
                    "type": "social",
                    "key": "social-S5LI",
                    "version": "0.5.1",
                    "conference_id": "431",
                    "custom_css":
                    [
                    ],
                    "custom_js":
                    [
                    ],
                    "json": "{"css":["http://cdn.ingo.me/widgets-social/0.5.1/css/ingo.social.widget.css"],"js":["http://cdn.ingo.me/widgets-social/0.5.1/js/ingo.social.widget.js"],"useJQuery":true,"type":"social","version":"0.5.1","status":0,"params":{"ingoId":"BA8A4314276C45398FFEA33C55CD3F96"}}",
                    "created_at": "2016-02-04T21:06:52.691Z",
                    "status": "Production Ready"
                    "script": "<script src=\"https://cdn.ingo.me/widgets-loader/latest/js/ingo.loader.widget.js\" data-ingo-id=\"LSYCQDY32SU1FSP3T4IGMGRFQIPHWZE5\"></script>"
                },
                {
                    "unique_id": "T4IGMGRFQIPHWZE5LSYCQDY32SU1FSP3",
                    "type": "login",
                    "key": "login-S5LI",
                    "version": "0.1.0",
                    "conference_id": "431",
                    "custom_css":
                    [
                    ],
                    "custom_js":
                    [
                    ],
                    "json": "{"css":["http://cdn.ingo.me/widgets-login/0.1.0/css/ingo.login.widget.css"],"js":["http://cdn.ingo.me/widgets-login/0.1.0/js/ingo.login.widget.js"],"useJQuery":true,"type":"login","version":"0.1.0","status":0,"params":{"ingoId":"BA8A4314276C45398FFEA33C55CD3F96"}}",
                    "created_at": "2016-02-04T21:06:52.691Z",
                    "status": "Production Ready"
                    "script": "<script src=\"https://cdn.ingo.me/widgets-loader/latest/js/ingo.loader.widget.js\" data-ingo-id=\"T4IGMGRFQIPHWZE5LSYCQDY32SU1FSP3\"></script>"
                }
            ]


## Getting Widgets [/1.0/events/{eventId}/widget-configs/{widgetId}]

You can get the details of an existing widget for and event that is available to you to manage.

**SECURITY:** You may view widgets for events you have permission to use.

As of: 0.1.0

### Get a Widget [GET]

+ Parameters
    + eventId: KET3PCS5TWAAK0ANYCLP420LVNEKNJPL (string, required) - the unique ID of the event
    + widgetId: LSYCQDY32SU1FSP3T4IGMGRFQIPHWZE5 (string, required) - Unique Id of the widget

+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 200 (application/json)
    + Body

            {
                "unique_id": "LSYCQDY32SU1FSP3T4IGMGRFQIPHWZE5",
                "type": "social",
                "key": "social-S5LI",
                "version": "0.5.1",
                "conference_id": "431",
                "custom_css":
                [
                ],
                "custom_js":
                [
                ],
                "json": "{"css":["http://cdn.ingo.me/widgets-social/0.5.1/css/ingo.social.widget.css"],"js":["http://cdn.ingo.me/widgets-social/0.5.1/js/ingo.social.widget.js"],"useJQuery":true,"type":"social","version":"0.5.1","status":0,"params":{"ingoId":"BA8A4314276C45398FFEA33C55CD3F96"}}",
                "created_at": "2016-02-04T21:06:52.691Z",
                "status": "Production Ready",
                "script": "<script src=\"https://cdn.ingo.me/widgets-loader/latest/js/ingo.loader.widget.js\" data-ingo-id=\"LSYCQDY32SU1FSP3T4IGMGRFQIPHWZE5\"></script>"
            }

## Deleting Widgets [/1.0/events/{eventId}/widget-configs/{widgetIdToDelete}/]

You can delete an existing widget for and event that is available to you to manage.

**SECURITY:** You may only delete widgets for events you have permission to use.

As of: 0.1.0

### Delete a Widget [DELETE]

+ Parameters
    + eventId: KET3PCS5TWAAK0ANYCLP420LVNEKNJPL (string, required) - the unique ID of the event
    + widgetIdToDelete: LSYCQDY32SU1FSP3T4IGMGRFQIPHWZE5 (string, required) - Unique Id of the widget

+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 200 (application/json)
    + Body
    
            {
                "unique_id": "LSYCQDY32SU1FSP3T4IGMGRFQIPHWZE5",
            }

## Updating Widgets [/1.0/events/{eventId}/widget-configs/{widgetIdToUpdate}/]

You can update an existing widget. You should send not empty object.

**SECURITY:** You may only update widgets for events you have permission to use.

As of: 0.1.0

### Updating a Widget [PATCH]

+ Parameters
    + eventId: KET3PCS5TWAAK0ANYCLP420LVNEKNJPL (string, required) - the unique ID of the event
    + widgetIdToUpdate: LSYCQDY32SU1FSP3T4IGMGRFQIPHWZE5 (string, required) - Unique Id of the widget

+ Attributes
    + custom_css (array) - optional array of custom css urls
    + custom_js (array) - optional array of custom js urls
    + params (object) - the parameters for the widget

+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 200 (application/json)
    + Body
    
            {
                "unique_id": "LSYCQDY32SU1FSP3T4IGMGRFQIPHWZE5"
            }

# Group Managing Accounts

## Listing Accounts [/1.0/accounts]

You can get a list of accounts.

**SECURITY:** You may only retrieve accounts you have permission to use.

As of: 0.1.0

### List Accounts [GET]

+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 200 (application/json)
    + Body
    
            [
                {
                    "id": 107,
                    "name": "Acme Account"
                },
                {
                    "id": 236,
                    "name": "ABest Events Account"
                }
            ]

## Geting Accounts [/1.0/accounts/{accountId}]

You can get an accounts by ID.

**SECURITY:** You may only retrieve accounts you have permission to use.

As of: 0.1.0

### Get an Account [GET]

+ Parameters
    + accountId: 1 (number, required) - the ID of the account to get

+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 200 (application/json)
    + Body
    
            {
                "id": 107,
                "name": "Acme Account",
                "`parent_account_id`": 1,
                "advocates_purchased": 0
            }

## Creating Accounts [/1.0/accounts/]            
Administrators can create accounts. You can specify a parent account by Id. To get a list
of accounts and their Ids, see "Listing Accounts."

**SECURITY**: You must have administrative privileges to use this endpoint

As of: 1.0
            
### Create an Account [POST]

+ Attributes
    + name: My Account (string, required) - the name of the account to create (must be unique)
    + parent_account_id: 1 (number, required) - the id of the parent account (defaults to INGO parent)
    + description: My testing account for events (string, optional) - a string description of the account (likely to be replaced with website address)

+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 201 (application/json)
    + Body
    
            {
                "id": 108,
                "name": "My Account",
                "`parent_account_id`": 1,
                "advocates_purchased": 0
            }
        
## Updating Accounts [/1.0/accounts/{accountId}/]            
Administrators can update accounts. To update an account, you must supply an
account ID. To get a list of accounts and their Ids, see "Listing Accounts."

**SECURITY**: You must have administrative privileges to use this endpoint

As of: 1.0
            
### Increment the Advocates Purchased for an Account [PATCH]

+ Parameters
    + accountId: 1 (number, required) - the account to update

+ Attributes
    + advocatesToAdd: 1 (number, required) - the amount of advocates to increment by

+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 201 (application/json)
    + Body
    
            {
                "id": 108,
                "name": "My Account",
                "`parent_account_id`": 1,
                "advocates_purchased": 2000
            }
        


# Group Managing Registration Platforms

## Listing Registration Platforms [/1.0/registrationplatforms/{?key_c}]

You can get a list of all the registration platforms to associate with your events. Can be filtered by name (key_c).

**SECURITY:** All Registration Platform details are available to all users.

As of: 0.1.0

### List all Registration Platforms [GET]

+ Parameters
    + key_c: Great Events (string, optional) - the name of the registration platform to filter the list by

+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 200 (application/json)
    + Body
    
            [
                {
                    "id": 1,
                    "key_c": "busyconf",
                    "cors_domains":
                    [
                        "http://staging.busyconf.com",
                        "https://busyconf.com",
                        "http://busyconf.dev",
                        "http://busyconf.com",
                        "http://alpha.busyconf.dev"
                    ]
                },
                {
                    "id": 2,
                    "key_c": "cds",
                    "cors_domains":
                    [
                        "https://www.xpressreg.net",
                        "http://www.xpressreg.net",
                        "https://dev1.cdsreg.com",
                        "https://prod.staging.xpressreg.net"
                    ]
                }
            ]

## Getting Registration Platforms [/1.0/registrationplatforms/{registrationPlatformId}]

You can get a registration platform by ID.

**SECURITY:** All Registration Platform details are available to all users.

As of: 0.1.0

### Get a Registration Platform [GET]

+ Parameters
    + registrationPlatformId: 1 (number, required) - the ID of the registration platform to get

+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 200 (application/json)
    + Body
    
            {
                "id": 1,
                "key_c": "busyconf",
                "cors_domains":
                [
                    "http://staging.busyconf.com",
                    "https://busyconf.com",
                    "http://busyconf.dev",
                    "http://busyconf.com",
                    "http://alpha.busyconf.dev"
                ]
            }


# Group Getting Event Registrant List
        
You can get registrant data for your event from the API similar to what is present 
in the Events Manager dashboard.

## Getting Registrants For an Event [/1.0/events/{eventId}/registrants]

You can get the registrants for your events.

**SECURITY:** You may only view the registrants for events you have permission to see.

As of: 0.1.0

### Get Registrants For an Event [GET]

+ Parameters
    + eventId: KET3PCS5TWAAK0ANYCLP420LVNEKNJPL (string, required) - the ID of the event 

+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 200 (application/json)
    + Body
    
            [
                {
                    "registrant_id":2,
                    "event_unique_id":"CO0JBASML3NRE5W4FZCURIDE4XPURLLJ",
                    "first_name":"John",
                    "last_name":"Smith",
                    "display_name":"John Smith",
                    "email":"johnsmith@mailinator.com",
                    "confirmation_time":"2017-02-01T03:44:30.618Z",
                    "picture_url":"https://s3.amazonaws.com/ingo.development.us-east.imgs/PWFCFI/2986035060128968n.jpg",
                    "created_at":"2017-02-01T03:44:30.618Z",
                    "title":"Operations Manager",
                    "visible":true,
                    "notify_enabled":true,
                    "company_name":"Example Company",
                    "is_exhibitor":false,
                    "social_registrant":true
                }
            ]


# Group Getting Network Attending for Registrant
        
You can get a list of social contacts that a registrant has that are also registered for the same event.

## Getting Social Network Attendance for an Event Registrants [/1.0/events/{eventId}/registrants/{registrantId}/network-attending]

You can get the registrants for your events.

**SECURITY:** You may only view the registrants for events you have permission to see.

As of: 0.1.0

### Get Social Network Attendance for an Event Registrant [GET]

+ Parameters
    + eventId: KET3PCS5TWAAK0ANYCLP420LVNEKNJPL (string, required) - the ID of the event 
    + registrantId: 37 (int, required) -- the ID of the registrant for whom to get the social network attendance

+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 200 (application/json)
    + Body
    
            [
                {
                    "registrant_id":35120,
                    "last_name":"Jim",
                    "first_name":"Smithington",
                    "display_name":"Jim Smithington",
                    "email":"jsmithington@gmail.com",
                    "title":null,
                    "company_name":"Interiors Unlimited",
                    "picture_url":"https://s3.amazonaws.com/ingo.production.us-east.imgs/IF1UN5SSFM40X503/572431_10151799124414877_70235255277_n.jpg",
                    "verification_picture_url":"https://www.linkedin.com/mpr/mprx/0_xbKKrj4ZLmSiFo-a1iISGJLzfD_nQ1ZVsasdf1h_MY5ATQFExN7muPKBJRNGhftasdf118BZYbISiLB-Oo230F64ZrIS_LBmRV23ttjSDFSDFtVeAPZ9uspJ",
                    "verified":true -- this indicates that the registrant has been positively matched to the social contact vs fuzzy match
                }
            ]


# Group Getting Event Invitations
        
You can get invitations that were sent for your event from the API.

## Getting Event Invitations by Advocate [/1.0/events/{eventId}/impressions/invitations/user/{userId}]

You can get the invitations for your events.

**SECURITY:** You may only view information for events you have permission to see.

As of: 0.1.0

### Get Event Invitations by Advocate [GET]

+ Parameters
    + eventId: KET3PCS5TWAAK0ANYCLP420LVNEKNJPL (string, required) - the ID of the event 
    + userId: 2 (int, required) -- the ID of the Advocate who sent the invites

+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 200 (application/json)
    + Body
    
            [
              {
                "firstname": "John",
                "lastname": "Smith",
                "picture": "https://media.licdn.com/mpr/mpr/shrinknp_400_400/KEAAQMzhlNGQ2YT...RiMQ.jpg",
                "conference": "Best Event Ever",
                "position": "Director",
                "sent_date": "2015-11-15T16:42:46.610Z",
                "registered": true,
                "network": "linkedin"
              }
            ]

# Group Listing Event Attendee Contacts

## Getting Attendee Contacts For an Event [/1.0/events/{eventId}/attendees/{attendeeId}/contacts{?limit,offset}]

You can list attendee contacts for some attendee

### Get Attendee Contacts For an Event [GET]

+ Parameters
    + eventId: KET3PCS5TWAAK0ANYCLP420LVNEKNJPL (string, required) - the ID of the event 
    + attendeeId: 42 (int, required) - the ID of attendee to get contacts
    + limit: 100 (int, required) - number of contact in chunk
    + offset: 0 (int, required) - chunk offset

+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
 
+ Response 200 (application/json)
    + Body
    
            [
                {
                    "first_name": "FirstName",
                    "last_name": "LastName",
                    "username": null,
                    "display_name": "DisplayName",
                    "service": "facebook",
                    "company_name": null,
                    "company_position": null,
                    "picture": "PictureUrl",
                    "score": 0
                }
            ]


# Group Getting Statistics For Your Event
        
You can get recent statistical data for your event from the API similar to what is present 
in the Events Manager dashboard.

## Getting Statistics For an Event [/1.0/events/{eventId}/statistics]

You can get the current statistics for your events.

**SECURITY:** You may only view the statistics for events you have permission to see.

As of: 0.1.0

### Get Statistics For an Event [GET]

+ Parameters
    + eventId: KET3PCS5TWAAK0ANYCLP420LVNEKNJPL (string, required) - the ID of the event 

+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 200 (application/json)
    + Body
    
            {
                "advocate_count":2,
                "unregistered_advocate_count":1,
                "attendee_count":5,
                "advocate_by_network_count":
                {
                    "linkedin":1,
                    "facebook":2
                },
                "registrant_count":1,
                "acquisition_count":3,
                "network_reach":
                {
                    "linkedin":3,
                    "facebook":10
                },
                "social_message_count":
                {
                    "facebook":2
                },
                "social_post_count":
                {
                    "facebook":2
                }
            }

            
# Group Troubleshooting Your Event
        
Widgets produce tracking events that can help you determine if they are
running properly. You can get a list of all potential issues with your 
event's widgets.

## Listing Widget Problems [/1.0/events/{eventId}/problems/widgets{?start,end}]

You can list the widget problems for your events. You can supply a date range 
but the date range may not exceed 14 days. If you do not supply a date range
the default will be the last 14 days. This request returns a list of problems
in the same format.  If there are no problem the list will be empty.

**SECURITY:** You may only view the widget problems for events you have permission to see.

As of: 0.1.0

### Get Widget Problems For an Event [GET]

+ Parameters
    + eventId: KET3PCS5TWAAK0ANYCLP420LVNEKNJPL (string, required) - the ID of the event 
    + start: `2016-02-04T21:06:52.691Z` (string, optional) - start date for period to analyze
    + end: `2016-02-04T21:06:52.691Z` (string, optional) - end date for period to analyze (cannot exceed 14 days from start date)

+ Request (application/json)
    + Headers
    
            Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Ni....
    
+ Response 200 (application/json)
    + Body
    
            [ 
                { 
                    problem_description: 'Post Button clicked but did not send',
                    `number_of_sessions`: 2,
                    problem_frequency: 3, 
                    first_occurrence: null,
                    last_occurrence: null,
                    `problem_widget_ids`: null,
                    problem_locations: null 
                }
            ]
            

# Group Changelog
Below is a date sorted list of changes to the API starting from 2016-08-11. If a change 
is deemed a "breaking change" we will note it as such.


##### **2016-08-11:** Added update (PATCH) for events
> *Non-breaking* - You can now edit an event


##### **2016-08-11:** Added target_reg_count to events endpoints
> *Non-breaking* - New attribute of events; optional, but highly recommended


##### **2016-08-11:** Added adbility to update purchased advocate quantity for accounts
> *Non-breaking* - Admin Only - The number of purchased advocates for an account can be incrementally updated